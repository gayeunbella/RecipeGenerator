/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:303750:
  appc.background(230);
} //_CODE_:window1:303750:

public void PlanetClicked(GDropList source, GEvent event) { //_CODE_:Planet:427209:
  selectedplanet= source.getSelectedText();
  planet.selectedplanet=selectedplanet;
  planet.Assignvalues();
} //_CODE_:Planet:427209:

public void orbitHeightChanged(GCustomSlider source, GEvent event) { //_CODE_:orbitHeight:576902:
  satellite.radius = orbitHeight.getValueI();
} //_CODE_:orbitHeight:576902:

public void satelliteMassChanged(GCustomSlider source, GEvent event) { //_CODE_:satelliteMass:286010:
  satellite.mass = satelliteMass.getValueI();
} //_CODE_:satelliteMass:286010:

public void generateSatellite(GButton source, GEvent event) { //_CODE_:satelliteGenerator:855675:
  println("satelliteGenerator - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:satelliteGenerator:855675:

public void pauseScene(GButton source, GEvent event) { //_CODE_:pause:248119:
  paused = !paused;

  if (pause.getText().equals("Pause")) {
    pause.setText("Resume");
    pause.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  } 
  else {
    pause.setText("Pause"); 
    pause.setLocalColorScheme(GCScheme.RED_SCHEME);
  }
} //_CODE_:pause:248119:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 350, 400, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  Planet = new GDropList(window1, 20, 50, 310, 80, 3, 10);
  Planet.setItems(loadStrings("list_427209"), 0);
  Planet.addEventHandler(this, "PlanetClicked");
  orbitHeight = new GCustomSlider(window1, 20, 185, 310, 40, "grey_blue");
  orbitHeight.setShowValue(true);
  orbitHeight.setShowLimits(true);
  orbitHeight.setLimits(200, 0, 400);
  orbitHeight.setNbrTicks(500);
  orbitHeight.setStickToTicks(true);
  orbitHeight.setNumberFormat(G4P.INTEGER, 0);
  orbitHeight.setOpaque(false);
  orbitHeight.addEventHandler(this, "orbitHeightChanged");
  satelliteMass = new GCustomSlider(window1, 20, 275, 310, 40, "grey_blue");
  satelliteMass.setShowValue(true);
  satelliteMass.setShowLimits(true);
  satelliteMass.setLimits(100, 0, 5000);
  satelliteMass.setNbrTicks(250);
  satelliteMass.setNumberFormat(G4P.INTEGER, 0);
  satelliteMass.setOpaque(false);
  satelliteMass.addEventHandler(this, "satelliteMassChanged");
  label1 = new GLabel(window1, 20, 240, 310, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Mass of the Satellite");
  label1.setOpaque(false);
  label2 = new GLabel(window1, 20, 150, 310, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Distance between the Earth's Surface and Satellite ");
  label2.setOpaque(false);
  label3 = new GLabel(window1, 20, 15, 310, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Planet to Orbit");
  label3.setOpaque(false);
  satelliteGenerator = new GButton(window1, 20, 330, 205, 30);
  satelliteGenerator.setText("Create a Satellite");
  satelliteGenerator.addEventHandler(this, "generateSatellite");
  pause = new GButton(window1, 230, 330, 100, 30);
  pause.setText("Pause");
  pause.setLocalColorScheme(GCScheme.RED_SCHEME);
  pause.addEventHandler(this, "pauseScene");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GDropList Planet; 
GCustomSlider orbitHeight; 
GCustomSlider satelliteMass; 
GLabel label1; 
GLabel label2; 
GLabel label3; 
GButton satelliteGenerator; 
GButton pause; 
